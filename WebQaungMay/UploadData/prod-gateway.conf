upstream prod-seller-web-server {
  server prod-sellerui-windo-beta2-1341491757.ap-southeast-1.elb.amazonaws.com;
}

upstream prod-seller-api-server {
  server prod-elb-seller-api-ws-1421911950.ap-southeast-1.elb.amazonaws.com;
}

upstream prod-seller-uploader-server {
  server prod-seller-uploader-ws-2002970107.ap-southeast-1.elb.amazonaws.com;
}

#==
server {
  server_name seller.windo.shop;
  root /var/www/html;
  listen [::]:80 ;
  listen 80 ;

  location /api/v1/products-import/ {
    rewrite ^/v1/products-import/(.*) /$1 break;

    # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "x-app-id, X-Access-Token, Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }

    proxy_pass       http://prod-seller-uploader-server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $proxy_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect   off;
    proxy_ssl_server_name on;
    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    proxy_buffering off;
  }

  location /api/v1/ {
    rewrite ^/v1/(.*) /$1 break;

    # Simple requests
    if ($request_method ~* "(GET|POST)") {
      add_header "Access-Control-Allow-Origin"  *;
    }

    # Preflighted requests
    if ($request_method = OPTIONS ) {
      add_header "Access-Control-Allow-Origin"  *;
      add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
      add_header "Access-Control-Allow-Headers" "x-app-id, X-Access-Token, Authorization, Origin, X-Requested-With, Content-Type, Accept";
      return 200;
    }

    proxy_pass       http://prod-seller-api-server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $proxy_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect   off;
    proxy_ssl_server_name on;
    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    proxy_buffering off;
  }

  location / {
    proxy_pass       http://prod-seller-web-server;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $proxy_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_redirect   off;
    proxy_ssl_server_name on;
    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    proxy_buffering off;
  }
}
